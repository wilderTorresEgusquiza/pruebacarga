{"version":3,"sources":["webpack:///./node_modules/chart.js/src/plugins/plugin.legend.js","webpack:///./node_modules/chart.js/src/helpers/helpers.options.js","webpack:///./node_modules/chart.js/src/core/core.animation.js","webpack:///./node_modules/chart.js/src/core/core.defaults.js","webpack:///./node_modules/chart.js/src/controllers/controller.line.js","webpack:///./node_modules/chart.js/src/platforms/platform.basic.js","webpack:///./node_modules/vue-chartjs/es/mixins/index.js","webpack:///./node_modules/vue-chartjs/es/BaseCharts.js","webpack:///./node_modules/chart.js/src/core/core.datasetController.js","webpack:///./node_modules/chart.js/src/core/core.element.js","webpack:///./node_modules/chartjs-color/node_modules/color-convert/conversions.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bar.js","webpack:///./node_modules/chart.js/src/elements/element.point.js","webpack:///./node_modules/chartjs-color/node_modules/color-convert/index.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bubble.js","webpack:///./node_modules/chart.js/src/scales/scale.time.js","webpack:///./node_modules/chart.js/src/helpers/index.js","webpack:///./node_modules/chart.js/src/helpers/helpers.canvas.js","webpack:///./src/constants/chart-config.js","webpack:///./node_modules/chart.js/src/charts/Chart.Scatter.js","webpack:///./node_modules/chart.js/src/charts/Chart.Doughnut.js","webpack:///./node_modules/chart.js/src/helpers/helpers.core.js","webpack:///./node_modules/color-name/index.js","webpack:///./node_modules/chart.js/src/elements/element.line.js","webpack:///./node_modules/chart.js/src/core/core.plugins.js","webpack:///./node_modules/chart.js/src/chart.js","webpack:///./node_modules/chart.js/src/controllers/controller.doughnut.js","webpack:///./node_modules/chart.js/src/elements/element.arc.js","webpack:///./node_modules/chart.js/src/scales/scale.linear.js","webpack:///./node_modules/chart.js/src/scales/scale.logarithmic.js","webpack:///./node_modules/chart.js/src/controllers/controller.bar.js","webpack:///./node_modules/chart.js/src/controllers/controller.radar.js","webpack:///./node_modules/chart.js/src/controllers/controller.bubble.js","webpack:///./node_modules/chart.js/src/core/core.scale.js","webpack:///./node_modules/chart.js/src/core/core.layouts.js","webpack:///./node_modules/chart.js/src/core/core.ticks.js","webpack:///./node_modules/chart.js/src/platforms/platform.js","webpack:///./node_modules/chart.js/src/charts/Chart.Radar.js","webpack:///./node_modules/chart.js/src/plugins/index.js","webpack:///./node_modules/chartjs-color-string/color-string.js","webpack:///./node_modules/chart.js/src/plugins/plugin.title.js","webpack:///./node_modules/chart.js/src/core/core.interaction.js","webpack:///./node_modules/chart.js/src/core/core.helpers.js","webpack:///./node_modules/chart.js/src/scales/scale.linearbase.js","webpack:///./node_modules/chart.js/src/charts/Chart.PolarArea.js","webpack:///./node_modules/chart.js/src/platforms/platform.dom.js","webpack:///./node_modules/chart.js/src/core/core.scaleService.js","webpack:///./node_modules/chart.js/src/helpers/helpers.easing.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler.js","webpack:///./node_modules/chart.js/src/elements/index.js","webpack:///./node_modules/chart.js/src/core/core.tooltip.js","webpack:///./node_modules/chart.js/src/core/core.js","webpack:///./node_modules/chart.js/src/elements/element.rectangle.js","webpack:///./node_modules/chart.js/src/controllers/controller.scatter.js","webpack:///./node_modules/chart.js/src/controllers/controller.polarArea.js","webpack:///./node_modules/chart.js/src/core/core.controller.js","webpack:///./node_modules/chartjs-color/index.js","webpack:///./node_modules/chart.js/src/charts/Chart.Line.js","webpack:///./node_modules/chart.js/src/scales/scale.category.js","webpack:///./node_modules/chart.js/src/scales/scale.radialLinear.js"],"names":["defaults","__webpack_require__","Element","helpers","layouts","noop","getBoxWidth","labelOpts","fontSize","usePointStyle","Math","SQRT2","boxWidth","_set","legend","display","position","fullWidth","reverse","weight","onClick","e","legendItem","index","datasetIndex","ci","this","chart","meta","getDatasetMeta","hidden","data","datasets","update","onHover","labels","padding","generateLabels","isArray","map","dataset","i","text","label","fillStyle","backgroundColor","isDatasetVisible","lineCap","borderCapStyle","lineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","borderWidth","strokeStyle","borderColor","pointStyle","legendCallback","push","id","length","join","Legend","extend","initialize","config","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","me","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","minSize","isHorizontal","width","left","right","height","top","bottom","paddingLeft","paddingTop","paddingRight","paddingBottom","options","legendItems","callback","filter","item","opts","ctx","globalDefault","global","valueOrDefault","defaultFontSize","fontStyle","defaultFontStyle","fontFamily","defaultFontFamily","labelFont","fontString","hitboxes","font","lineWidths","totalHeight","textAlign","textBaseline","each","measureText","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","max","draw","lineDefault","elements","line","legendWidth","cursor","fontColor","defaultFontColor","drawLegendBox","x","y","isNaN","save","defaultColor","isLineWidthZero","setLineDash","radius","offSet","centerX","centerY","canvas","drawPoint","strokeRect","fillRect","restore","fillText","textWidth","halfFontSize","xLeft","yMiddle","beginPath","moveTo","lineTo","stroke","handleEvent","type","changed","lh","hitBox","call","native","createNewLegendAndAttach","legendOpts","configure","addBox","module","exports","_element","beforeInit","mergeIf","removeBox","afterEvent","toLineHeight","value","size","matches","match","toPadding","t","r","b","l","isObject","resolve","inputs","context","ilen","undefined","animation","duration","easing","onProgress","onComplete","Chart","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","window","startDigest","startTime","Date","now","framesToDrop","floor","advance","endTime","count","min","Object","defineProperty","prototype","get","set","scope","values","merge","showLines","spanGaps","hover","mode","scales","xAxes","yAxes","lineEnabled","showLine","controllers","DatasetController","datasetElementType","Line","dataElementType","Point","reset","custom","getMeta","points","lineElementOptions","scale","getScaleForId","yAxisID","getDataset","tension","lineTension","_scale","_datasetIndex","_children","_model","fill","steppedLine","stepped","cubicInterpolationMode","pivot","updateElement","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","valueAtIndexOrDefault","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","yScale","xScale","xAxisID","pointOptions","pointRadius","hitRadius","pointHitRadius","getPixelForValue","NaN","getBasePixel","calculatePointY","_xScale","_yScale","_index","skip","ds","dsMeta","sumPos","sumNeg","stacked","stackedRightValue","Number","getRightValue","rightValue","model","controlPoints","area","chartArea","capControlPoint","pt","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","next","controlPointNextY","capBezierPoints","clipArea","unclipArea","setHoverStyle","hoverRadius","pointHoverRadius","hoverBackgroundColor","pointHoverBackgroundColor","getHoverColor","hoverBorderColor","pointHoverBorderColor","hoverBorderWidth","pointHoverBorderWidth","removeHoverStyle","acquireContext","getContext","generateChart","chartId","chartType","createElement","style","styles","class","cssClasses","attrs","ref","props","default","String","plugins","Array","_chart","_plugins","methods","addPlugin","plugin","$data","generateLegend","renderChart","destroy","chart_default","a","$refs","beforeDestroy","Bar","HorizontalBar","Doughnut","Pie","PolarArea","Radar","Bubble","arrayEvents","listenArrayEvents","array","listener","_chartjs","listeners","configurable","enumerable","forEach","key","method","charAt","toUpperCase","slice","base","args","arguments","res","apply","object","unlistenArrayEvents","stub","indexOf","linkScales","addElements","updateIndex","scaleID","_data","createMetaDataset","createMetaData","metaData","addElementAndReset","element","buildOrUpdateElements","resyncElements","transition","easingValue","elementOpts","numMeta","numData","insertElements","start","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","inherits","color","interpolate","view","ease","actual","origin","target","c0","c1","keys","hasOwnProperty","valid","mix","rgbString","isFinite","configuration","_view","clone","_start","tooltipPosition","hasValue","isNumber","rgb2hsl","rgb","h","s","g","delta","rgb2hsv","v","rgb2hwb","w","rgb2cmyk","c","m","k","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","pow","z","rgb2lab","xyz","rgb2lch","lab2lch","hsl2rgb","hsl","t1","t2","t3","val","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv","hi","f","p","q","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb","n","wh","bl","ratio","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","y2","hr","atan2","PI","sqrt","lab2rgb","lch2lab","lch","cos","sin","lch2xyz","lch2rgb","keyword2rgb","keyword","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","xRange","mouseX","vm","abs","yRange","mouseY","inRange","inLabelRange","inXRange","inYRange","getCenterPoint","getArea","errMargin","round","alpha","conversions","convert","Converter","func","arg","pair","exec","from","to","convs","routeSpace","space","getValues","setValues","vals","fspace","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","items","hash","out","buildLookupTable","timestamps","distribution","time","pos","prev","curr","table","lookup","mid","i0","i1","lo","skey","sval","tkey","range","span","offset","momentify","parser","format","isValid","parse","input","isNullOrUndef","startOf","valueOf","determineStepSize","unit","capacity","factor","interval","milliseconds","ceil","determineUnitForAutoTicks","minUnit","determineUnitForFormatting","ticks","diff","as","determineMajorUnit","generate","timeOpts","minor","major","stepSize","unitStepSize","weekday","isoWeekday","majorTicksEnabled","enabled","first","last","add","computeOffsets","upper","lower","ticksFromTimestamps","majorUnit","determineLabelFormat","momentDate","hasTime","defaultConfig","bounds","displayFormat","displayFormats","autoSkip","source","TimeScale","Scale","Error","mergeTicksOptions","console","warn","rawValue","determineDataLimits","j","jlen","timestamp","sort","endOf","_horizontal","_table","_timestamps","buildTicks","getLabelCapacity","_unit","_majorUnit","_offsets","_labelFormat","getLabelForIndex","tooltipFormat","tickFormatFunction","tick","formatOverride","formats","minorFormat","majorFormat","majorTime","majorTickOpts","tickOpts","formatter","userCallback","convertTicksToLabels","getPixelForOffset","getPixelForTick","getTicks","getValueForPixel","pixel","getLabelWidth","ticksOpts","tickLabelWidth","angle","toRadians","maxRotation","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","innerWidth","scaleService","registerScaleType","clear","clearRect","roundedRect","rx","ry","quadraticCurveTo","rect","edgeLength","xOffset","yOffset","toString","drawImage","arc","closePath","leftX","topY","sideSize","clip","flip","bezierCurveTo","drawRoundedRectangle","d","__webpack_exports__","ChartConfig","primary","warning","danger","success","info","lightGrey","lineChartAxesColor","legendFontColor","chartGridColor","axesColor","shadowColor","Scatter","uid","defaultValue","fn","thisArg","loopable","len","arrayEquals","a0","a1","v0","v1","klen","_merger","tval","_mergerIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","globalDefaults","current","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","_cacheId","register","concat","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","Interaction","platform","Ticks","Title","title","pluginService","PluginBase","canvasHelpers","layoutService","animateRotate","animateScale","arcOpts","bw","cutoutPercentage","rotation","circumference","tooltips","callbacks","tooltipItem","dataLabel","doughnut","pie","Arc","getRingIndex","ringIndex","availableWidth","availableHeight","startAngle","endAngle","end","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","calculateCircumference","arcs","hoverWidth","chartX","chartY","pointRelativePosition","getAngleFromPoint","distance","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","formatters","linear","LinearScale","LinearScaleBase","DEFAULT_MIN","DEFAULT_MAX","IDMatches","hasStacks","stack","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","maxTicks","maxTicksLimit","handleDirectionalChanges","innerDimension","ticksAsNumbers","generateTicks","generationOptions","dataRange","exp","significand","tickVal","log10","endExp","endSignificand","minNotZero","precision","lastTick","logarithmic","LogarithmicScale","tickValues","_getFirstTickValue","sign","firstTickValue","computeMinSampleSize","pixels","computeFitCategoryTraits","ruler","thickness","barThickness","stackCount","categoryPercentage","barPercentage","chunk","computeFlexCategoryTraits","percent","gridLines","offsetGridLines","axis","rectangle","borderSkipped","yLabel","datasetLabel","xLabel","bar","Rectangle","rects","_ruler","getRuler","rectangleOptions","updateElementGeometry","vscale","getValueScale","horizontal","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","name","imeta","ivalue","controller","stackIndex","maxBarThickness","Infinity","rectangleElementOptions","horizontalBar","radar","pointElementOptions","pointPosition","getPointPositionForValue","xCenter","yCenter","dataPoint","bubble","_resolveElementOptions","dsIndex","getPixelForDecimal","_options","dataIndex","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","mirror","autoSkipPadding","labelOffset","computeTextSize","longestText","parseFontOptions","family","parseLineHeight","getPadding","_ticks","longestTextCache","beforeDataLimits","afterDataLimits","beforeBuildTicks","afterBuildTicks","beforeTickToLabelConversion","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","tickFont","labelRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","scaleLabelLineHeight","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","skipRatio","shouldSkip","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","result","optionMajorTicks","isRotated","tickFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","zeroLineIndex","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","rotate","lineCount","scaleLabelX","scaleLabelY","halfLineHeight","filterByPosition","where","sortByWeight","_tmpIndex_","boxes","layoutItem","prop","layoutOptions","layout","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaWidth","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","getMinimumBoxSize","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","box","finalFitVerticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBoxSize","findNextWhere","minBox","scaleMargin","tickValue","logDelta","tickString","numDecimal","toFixed","remain","toExponential","basic","dom","implementation","_enabled","releaseContext","addEventListener","removeEventListener","filler","colorNames","getRgba","string","abbr","hex","rgba","per","parseInt","parseFloat","getHsla","getHwb","getRgb","getHsl","hsla","getAlpha","hexString","hexDouble","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","num","str","textSize","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","getRelativePosition","parseVisibleItems","handler","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","modes","single","x-axis","nearest","sizeA","sizeB","ret","intersectsItem","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","configMerge","scaleMerge","getScaleDefaults","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","epsilon","almostWhole","rounded","reduce","NEGATIVE_INFINITY","exponent","log","LOG10E","powerOf10","isPowerOf10","degrees","toDegrees","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","distanceBetweenPoints","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","loop","niceNum","niceFraction","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","getMaximumWidth","container","clientWidth","cw","getMaximumHeight","clientHeight","ch","el","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","error","colorValue","CanvasPattern","saturate","darken","spacing","niceRange","niceMin","niceMax","numSpaces","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","fixedStepSize","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","initCanvas","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","supportsEventListenerOptions","supports","eventListenerOptions","passive","createEvent","nativeEvent","fromNativeEvent","event","throttled","ticking","createResizer","resizer","cls","maxSize","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","watchForRender","expando","proxy","renderProxy","animationName","reflow","offsetParent","classList","unwatchForRender","remove","addResizeListener","insertBefore","firstChild","removeResizeListener","removeChild","injectCSS","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","keyframes","getElementById","removeAttribute","proxies","addEvent","removeEvent","constructors","scaleConstructor","scaleDefaults","getScaleConstructor","updateScaleDefaults","additions","addScalesToLayout","effects","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","p0","p1","d0","d1","afterDatasetsUpdate","$filler","beforeDatasetDraw","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getTooltipSize","tooltip","body","combinedBodyLength","bodyItem","before","lines","after","titleLineCount","footerLineCount","widthPadding","maxLineWidth","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","Tooltip","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","existingModel","active","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","hasTooltipContent","getElementsAtEventForMode","average","eventPosition","nearestElement","tp","responsive","responsiveAnimationDuration","maintainAspectRatio","events","animationDuration","construct","isVertical","getBarBounds","halfWidth","halfHeight","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","borders","startCorner","cornerAt","corner","scatter","angleLines","circular","pointLabels","polarArea","countVisibleElements","visibleCount","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","initConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","types","instances","_bufferedRender","bindEvents","resize","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","obj","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","Color","lightness","whiteness","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","desaturate","whiten","blacken","greyscale","clearer","opaquer","mixinColor","color1","w1","w2","toJSON","spaces","maxes","capped","chans","sname","svalues","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getPointLabelFontOptions","pointLabelOptions","measureLabelSize","determineLimits","fitWithPointLabels","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","drawingArea","setCenterPoint","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","param","LinearRadialScale","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset"],"mappings":"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","file":"js/chunk-3441.a53dbc2a.js","sourcesContent":["'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.Animation = Element.extend({\n\t\tchart: null, // the animation associated chart instance\n\t\tcurrentStep: 0, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @param {Chart} chart - The chart to animate.\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t\t * @param {Number} duration - The animation duration in ms.\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chart, animation, duration, lazy) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar i, ilen;\n\n\t\t\tanimation.chart = chart;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchart.animating = true;\n\t\t\t}\n\n\t\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\t\tif (animations[i].chart === chart) {\n\t\t\t\t\tanimations[i] = animation;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tanimations.push(animation);\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (animations.length === 1) {\n\t\t\t\tthis.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\tcancelAnimation: function(chart) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\t\treturn animation.chart === chart;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchart.animating = false;\n\t\t\t}\n\t\t},\n\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tme.advance(1 + framesToDrop);\n\n\t\t\tvar endTime = Date.now();\n\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tadvance: function(count) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar animation, chart;\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < animations.length) {\n\t\t\t\tanimation = animations[i];\n\t\t\t\tchart = animation.chart;\n\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\t\tchart.animating = false;\n\t\t\t\t\tanimations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation instead\n\t * @prop Chart.Animation#animationObject\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\n\t\tget: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\n\t * @prop Chart.Animation#chartInstance\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n\t\tget: function() {\n\t\t\treturn this.chart;\n\t\t},\n\t\tset: function(value) {\n\t\t\tthis.chart = value;\n\t\t}\n\t});\n\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, area);\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n","function dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n        this.$emit('labels:update');\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n        this.$emit('xlabels:update');\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n        this.$emit('ylabels:update');\n      }\n\n      chart.update();\n      this.$emit('chart:update');\n    } else {\n      if (chart) {\n        chart.destroy();\n        this.$emit('chart:destroy');\n      }\n\n      this.renderChart(this.chartData, this.options);\n      this.$emit('chart:render');\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n\n      this.$emit('chart:destroy');\n    }\n\n    this.renderChart(this.chartData, this.options);\n    this.$emit('chart:render');\n  }\n}\n\nexport var reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport var reactiveProp = {\n  props: {\n    chartData: {\n      required: true\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport default {\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n};","import Chart from 'chart.js';\nexport function generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      generateLegend: function generateLegend() {\n        if (this.$data._chart) {\n          return this.$data._chart.generateLegend();\n        }\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new Chart(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nexport var Bar = generateChart('bar-chart', 'bar');\nexport var HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nexport var Doughnut = generateChart('doughnut-chart', 'doughnut');\nexport var Line = generateChart('line-chart', 'line');\nexport var Pie = generateChart('pie-chart', 'pie');\nexport var PolarArea = generateChart('polar-chart', 'polarArea');\nexport var Radar = generateChart('radar-chart', 'radar');\nexport var Bubble = generateChart('bubble-chart', 'bubble');\nexport var Scatter = generateChart('scatter-chart', 'scatter');\nexport default {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar color = helpers.color;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\tvar ratio = 0;\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t// Cliping for Points.\n\t\t// going out from inner charArea?\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n\t\t\t// Point fade out\n\t\t\tif (model.x < chartArea.left) {\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t}\n\t\t\tratio = Math.round(ratio * 100) / 100;\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t}\n\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n\t}\n});\n","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Chart.Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar rx = Math.min(radius, width / 2);\n\t\t\tvar ry = Math.min(radius, height / 2);\n\n\t\t\tctx.moveTo(x + rx, y);\n\t\t\tctx.lineTo(x + width - rx, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n\t\t\tctx.lineTo(x + width, y + height - ry);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n\t\t\tctx.lineTo(x + rx, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n\t\t\tctx.lineTo(x, y + ry);\n\t\t\tctx.quadraticCurveTo(x, y, x + rx, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n\tctx.closePath();\n};\n","/**\n* Change all chart colors\n*/\nexport const ChartConfig = {\n   color: {\n      'primary': '#5D92F4',\n      'warning': '#FFB70F',\n      'danger': '#FF3739',\n      'success': '#00D014',\n      'info': '#00D0BD',\n      'white': '#fff',\n      'lightGrey': '#E8ECEE'\n   },\n   lineChartAxesColor: '#E9ECEF',\n   legendFontColor: '#AAAEB3', // only works on react chart js 2\n   chartGridColor: '#EAEAEA',\n   axesColor: '#657786',\n   shadowColor: 'rgba(0,0,0,0.3)'\n}\n","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n","module.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Ticks = require('./core/core.ticks');\n\nrequire('./core/core.animation')(Chart);\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\nrequire('./core/core.scaleService')(Chart);\nrequire('./core/core.scale')(Chart);\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-it plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.radius = options.radius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\n\t\t\treturn values;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nmodule.exports = function(Chart) {\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tfunction parseLineHeight(options) {\n\t\treturn helpers.options.toLineHeight(\n\t\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n\t}\n\n\tChart.Scale = Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the scale tick objects ({label, major})\n\t\t * @since 2.7\n\t\t */\n\t\tgetTicks: function() {\n\t\t\treturn this._ticks;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tmergeTicksOptions: function() {\n\t\t\tvar ticks = this.options.ticks;\n\t\t\tif (ticks.minor === false) {\n\t\t\t\tticks.minor = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (ticks.major === false) {\n\t\t\t\tticks.major = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var key in ticks) {\n\t\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t\t// around for long time and not marked as private, we can't change its structure\n\t\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t\t// use scale.getTicks() instead.\n\n\t\t\tme.beforeBuildTicks();\n\n\t\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\t\tticks = me.buildTicks() || [];\n\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\n\t\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t\t// this method and supposed to contain only string values).\n\t\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\t\tlabel = labels[i];\n\t\t\t\ttick = ticks[i];\n\t\t\t\tif (!tick) {\n\t\t\t\t\tticks.push(tick = {\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tmajor: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttick.label = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme._ticks = ticks;\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += deltaHeight;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += deltaHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t\t}\n\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (rawValue) {\n\t\t\t\tif (this.isHorizontal()) {\n\t\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t\t}\n\t\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t/**\n\t\t * Used to get the value to display in the tooltip for the data at the given index\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param value\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t/**\n\t\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param pixel\n\t\t */\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the tick at the given index\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (offset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t\t},\n\n\t\t/**\n\t\t * Utility for getting the pixel location of a percentage of scale\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForDecimal: function(decimal) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\t/**\n\t\t * Returns the pixel for the minimum chart value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t/**\n\t\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t\t * @private\n\t\t */\n\t\t_autoSkip: function(ticks) {\n\t\t\tvar skipRatio;\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar optionTicks = me.options.ticks.minor;\n\t\t\tvar tickCount = ticks.length;\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\tvar result = [];\n\t\t\tvar i, tick, shouldSkip;\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\t\ttick = ticks[i];\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\t\tdelete tick.label;\n\t\t\t\t}\n\t\t\t\tresult.push(tick);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = defaults.global;\n\t\t\tvar optionTicks = options.ticks.minor;\n\t\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\t\tvar xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar label = tick.label;\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: tick.major,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left;\n\t\t\t\tvar x2 = me.right + axisWidth;\n\t\t\t\tvar y1 = me.top;\n\t\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.currentTarget || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index;\n\t\tvar datasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors,\n\t\t\tborderColor: tooltipOpts.borderColor,\n\t\t\tborderWidth: tooltipOpts.borderWidth\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize;\n\t\tvar bodyFontSize = model.bodyFontSize;\n\t\tvar footerFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chart.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize;\n\t\tvar caretPadding = vm.caretPadding;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = alignment.xAlign;\n\t\tvar yAlign = alignment.yAlign;\n\t\tvar paddingAndSize = caretSize + caretPadding;\n\t\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t\tif (x + size.width > chart.width) {\n\t\t\t\tx = chart.width - size.width;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t\tthis._lastActive = [];\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\t\tvar title = callbacks.title.apply(me, arguments);\n\t\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\tvar labelTextColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t\t});\n\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\t\tmodel.labelColors = labelColors;\n\t\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size) {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t\t},\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\t\tvar x1, x2, x3, y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x;\n\t\t\tvar ptY = tooltipPoint.y;\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\ty2 = ptY + (height / 2);\n\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\t\ty3 = y2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = vm.caretX;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t\t// invert drawing order\n\t\t\t\t\tvar tmp = x3;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t\tx1 = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar x = pt.x;\n\t\t\tvar y = pt.y;\n\t\t\tvar width = tooltipSize.width;\n\t\t\tvar height = tooltipSize.height;\n\t\t\tvar radius = vm.cornerRadius;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tif (yAlign === 'bottom') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\n\t\t\tctx.fill();\n\n\t\t\tif (vm.borderWidth > 0) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\t// Truthy/falsey value for empty tooltip\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t\t// Only handle target event on tooltip change\n\t\t\tif (changed) {\n\t\t\t\tme._lastActive = me._active;\n\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len, nearestElement;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n"],"sourceRoot":""}